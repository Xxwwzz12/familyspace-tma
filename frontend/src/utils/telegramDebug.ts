// frontend/src/utils/telegramDebug.ts

interface TelegramDiagnostics {
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–ª–∞–≥–∏
  isInTelegram: boolean;
  hasWebApp: boolean;
  hasInitData: boolean;
  isExpanded: boolean;
  isIframe: boolean;
  
  // –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
  platform: string | undefined;
  version: string | undefined;
  initDataLength: number;
  viewportHeight: number;
  urlParams: string;
  
  // –ü—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  issues: string[];
  suggestions: string[];
}

export const diagnoseTelegramEnv = (): TelegramDiagnostics => {
  const issues: string[] = [];
  const suggestions: string[] = [];
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π window.Telegram –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π
  const telegram = window.Telegram;
  const webApp = telegram?.WebApp;
  
  // –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
  const isInTelegram = typeof telegram !== 'undefined';
  const hasWebApp = typeof webApp !== 'undefined';
  const hasInitData = Boolean(webApp?.initData);
  const initData = webApp?.initData || '';
  const isExpanded = Boolean(webApp?.isExpanded);

  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
  const isIframe = window.self !== window.top;
  const urlParams = new URLSearchParams(window.location.search).toString();
  const viewportHeight = window.innerHeight;

  // –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º
  if (!isInTelegram) {
    issues.push('–û–±—ä–µ–∫—Ç Telegram –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –≤ window');
    suggestions.push(
      '–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Telegram-–∫–ª–∏–µ–Ω—Ç', 
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É —Å–∫—Ä–∏–ø—Ç–æ–≤ –±—Ä–∞—É–∑–µ—Ä–∞',
      '–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç telegram-web-app.js –∑–∞–≥—Ä—É–∂–µ–Ω'
    );
  }

  if (isInTelegram && !hasWebApp) {
    issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –æ–±—ä–µ–∫—Ç WebApp');
    suggestions.push(
      '–û–±–Ω–æ–≤–∏—Ç–µ Telegram –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏',
      '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Telegram',
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ—Ä—Å–∏—é Telegram WebApp API'
    );
  }

  if (hasWebApp && !hasInitData) {
    issues.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç initData');
    suggestions.push(
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞—á–∏ startParam',
      '–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–æ—Ç–∞',
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ WebApp'
    );
  }

  if (hasInitData && initData.length < 20) {
    issues.push('–°–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ initData');
    suggestions.push('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞');
  }

  if (isIframe) {
    issues.push('–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ iframe');
    suggestions.push(
      '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –±—Ä–∞—É–∑–µ—Ä–∞',
      '–£–±–µ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–æ–º–µ–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'
    );
  }

  if (viewportHeight < 100) {
    issues.push('–ê–Ω–æ–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ viewport');
    suggestions.push(
      '–í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω',
      '–í—ã–∑–æ–≤–∏—Ç–µ –º–µ—Ç–æ–¥ Telegram.WebApp.expand()'
    );
  }

  // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  const diagnostics: TelegramDiagnostics = {
    isInTelegram,
    hasWebApp,
    hasInitData,
    isExpanded,
    isIframe,
    platform: webApp?.platform,
    version: webApp?.version,
    initDataLength: initData.length,
    viewportHeight,
    urlParams,
    issues,
    suggestions
  };

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
  console.group('üîç Telegram WebApp Diagnostics');
  console.table({
    'In Telegram': isInTelegram ? '‚úÖ' : '‚ùå',
    'WebApp Available': hasWebApp ? '‚úÖ' : '‚ùå',
    'Has Init Data': hasInitData ? '‚úÖ' : '‚ùå',
    'Is Expanded': isExpanded ? '‚úÖ' : '‚ùå',
    'Viewport Height': `${viewportHeight}px`,
    'Platform': diagnostics.platform || 'N/A',
    'Version': diagnostics.version || 'N/A'
  });
  
  if (issues.length > 0) {
    console.group('üö® Issues');
    issues.forEach(issue => console.log(`‚Ä¢ ${issue}`));
    console.groupEnd();
    
    console.group('üí° Suggestions');
    suggestions.forEach(suggestion => console.log(`‚Ä¢ ${suggestion}`));
    console.groupEnd();
  } else {
    console.log('‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
  }
  console.groupEnd();

  return diagnostics;
};

// –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–µ—Ç–æ–¥–æ–≤ WebApp
export const checkTelegramMethod = (methodName: string): boolean => {
  const webApp = window.Telegram?.WebApp;
  if (!webApp) return false;
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ –∫–ª—é—á–∏ WebApp
  const method = webApp[methodName as keyof typeof webApp];
  return typeof method === 'function';
};

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å–≤–æ–π—Å—Ç–≤ WebApp
export const checkTelegramProperty = (propertyName: string): boolean => {
  const webApp = window.Telegram?.WebApp;
  if (!webApp) return false;
  
  return propertyName in webApp;
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ WebApp
export const getTelegramProperty = <T>(propertyName: string): T | undefined => {
  const webApp = window.Telegram?.WebApp;
  if (!webApp) return undefined;
  
  return webApp[propertyName as keyof typeof webApp] as T;
};

// –≠–∫—Å–ø–æ—Ä—Ç –≥–æ—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ UI
export const generateDiagnosticReport = (): string => {
  const diagnostics = diagnoseTelegramEnv();
  
  const report = `
Telegram Environment Report:
============================
‚Ä¢ Telegram API: ${diagnostics.isInTelegram ? '‚úÖ Available' : '‚ùå Missing'}
‚Ä¢ WebApp Object: ${diagnostics.hasWebApp ? '‚úÖ Available' : '‚ùå Missing'}
‚Ä¢ Init Data: ${diagnostics.hasInitData ? `‚úÖ Present (${diagnostics.initDataLength} chars)` : '‚ùå Missing'}
‚Ä¢ Platform: ${diagnostics.platform || 'Unknown'}
‚Ä¢ Version: ${diagnostics.version || 'Unknown'}
‚Ä¢ Viewport: ${diagnostics.viewportHeight}px
‚Ä¢ Is Expanded: ${diagnostics.isExpanded ? 'Yes' : 'No'}
‚Ä¢ Issues detected: ${diagnostics.issues.length}

${diagnostics.issues.length > 0 ? `
Recommendations:
${diagnostics.suggestions.map(s => `‚Ä¢ ${s}`).join('\n')}
` : '‚úÖ Environment looks normal'}
  `.trim();

  return report;
};

// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–æ–≤ WebApp
export const callTelegramMethod = <T>(
  methodName: string, 
  ...args: any[]
): T | undefined => {
  if (!checkTelegramMethod(methodName)) {
    console.warn(`–ú–µ—Ç–æ–¥ Telegram.WebApp.${methodName} –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω`);
    return undefined;
  }
  
  try {
    const webApp = window.Telegram?.WebApp;
    if (!webApp) return undefined;
    
    const method = webApp[methodName as keyof typeof webApp] as Function;
    return method.apply(webApp, args);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ Telegram.WebApp.${methodName}:`, error);
    return undefined;
  }
};

// –≠–∫—Å–ø–æ—Ä—Ç —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è WebApp –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
export const getWebAppState = () => {
  const webApp = window.Telegram?.WebApp;
  if (!webApp) return null;
  
  return {
    initData: webApp.initData,
    platform: webApp.platform,
    version: webApp.version,
    isExpanded: webApp.isExpanded,
    // –î–æ–±–∞–≤–ª—è–µ–º –¥—Ä—É–≥–∏–µ –≤–∞–∂–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
  };
};