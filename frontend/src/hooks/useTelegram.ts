// frontend/src/hooks/useTelegram.ts
import { safeWebApp } from '@/utils/initTelegramSDK';

interface TelegramUser {
  id: number;
  first_name: string;
  last_name?: string;
  username?: string;
  language_code?: string;
  is_premium?: boolean;
  allows_write_to_pm?: boolean;
}

const useTelegram = () => {
  // –ü—Ä–∞–≤–∏–ª—å–Ω–æ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ Telegram –æ–∫—Ä—É–∂–µ–Ω–∏—è
  const isTelegramEnv = typeof window.Telegram !== 'undefined' && 
                       typeof window.Telegram.WebApp !== 'undefined' &&
                       window.Telegram.WebApp.initData !== '';

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è viewport
  const expandViewport = () => {
    if (isTelegramEnv) {
      try {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º SDK –ø–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º
        window.Telegram.WebApp.ready();
        window.Telegram.WebApp.expand();
        console.log('‚úÖ Viewport expanded successfully');
      } catch (error) {
        console.error('expandViewport failed:', error);
      }
    }
  };

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ Telegram
  const initData = isTelegramEnv ? window.Telegram.WebApp.initData : null;
  const userData = isTelegramEnv ? window.Telegram.WebApp.initDataUnsafe.user : null;

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  console.log('üì± useTelegram hook. isTelegramEnv:', isTelegramEnv);
  console.log('üë§ User data:', userData);
  console.log('üîß Init data:', initData);

  return {
    isTelegramEnv,
    expandViewport,
    initData,
    userData: userData as TelegramUser | null,
    webApp: isTelegramEnv ? window.Telegram.WebApp : null
  };
};

export default useTelegram;